<?xml-model title="DocBook customization for the XProc book"
            href="../../schemas/xproc.rnc" 
            type="application/relax-ng-compact-syntax" ?>
<refentry xmlns="http://docbook.org/ns/docbook"
          xmlns:cx="http://xmlcalabash.com/ns/extensions"
          xmlns:xi="http://www.w3.org/2001/XInclude"
          xmlns:xlink="http://www.w3.org/1999/xlink"
          xmlns:xsd="http://www.w3.org/2001/XMLSchema"
          xmlns:p="http://www.w3.org/ns/xproc"
          xml:id="p.add-xml-base">
<refnamediv>
<refname><step>p:add-xml-base</step></refname>
<refpurpose>Adds explicit <att>xml:base</att> attributes</refpurpose>
</refnamediv>

<refsynopsisdiv>
<p:declare-step type="p:add-xml-base">
   <p:input port="source"/>
   <p:output port="result"/>
   <p:option name="all" select="'false'" cx:type="xsd:boolean"/>
   <p:option name="relative" select="'true'" cx:type="xsd:boolean"/>
</p:declare-step>
</refsynopsisdiv>

<refsection>
<title>Description</title>

<para>The <step>p:add-xml-base</step> step exposes the base URIs in
the document via explicit <att>xml:base</att> attributes. If that sounds
a little odd, it’s important to realize that the base URI of a node is
an intrinsic property of that node. What <step>p:add-xml-base</step> does
is copy that intrinsic value to the explicit value of the <att>xml:base</att>
attribute.</para>

<para>The input
document from the <port>source</port> port is copied to the
<port>result</port> port with <att>xml:base</att> attributes added to,
or corrected on, each element as specified by the options on this
step.</para>

<para>XML provides documents, elements, and processing instructions with
an intrinsic “base URI” property. As documents flow through an XProc
pipeline this property is generally preserved. However, there are
operations that cannot preserve the intrinsic base URI; examples include
storing the document to disk or sending it to a remote web service
via <step>p:http-request</step>.</para>

<para>The <biblioref linkend="xml-base"/> specification provides for
an explicit syntax to represent the base URI: the <att>xml:base</att>
attribute.</para>

<para>This step makes any base URIs in the document explicit using
<att>xml:base</att>. Specifically:</para>

<itemizedlist>
<listitem>
<para>An <att>xml:base</att> attribute is added to the document element.
</para>
</listitem>
<listitem>
<para>For other elements, if either the <option>all</option> option
is true or the base URI of the element is different than its parent,
an <att>xml:base</att> attribute is added to the element.
</para>
</listitem>
</itemizedlist>

<para>If the <option>relative</option> option is <literal>true</literal>,
then the value of the <att>xml:base</att> attribute is an appropriate
relative URI, otherwise it’s an absolute URI.</para>

<note>
<para>If the <option>all</option> option is <literal>false</literal>, then
<step>p:add-xml-base</step> attributes will actually <emphasis>remove</emphasis>
redundant <att>xml:base</att> attributes. In other words, you can think of
the process as removing all <att>xml:base</att> attributes and then only
adding the ones that are necessary per the options specified to the
step.</para>
</note>
</refsection>
<refsection>
<title>Errors</title>

<informaltable>
<tgroup cols="2">
<colspec colnum="1" colwidth="1in"/>
<thead>
<row>
<entry>Error</entry>
<entry>Description</entry>
</row>
</thead>
<tbody>
<row>
<entry><error code="C0058"/></entry>
<entry>Occurs
if the <option>all</option> and <option>relative</option> options are
<emphasis>both</emphasis> <literal>true</literal>.
</entry>
</row>
</tbody>
</tgroup>
</informaltable>
</refsection>

<refsection>
<title>Examples</title>

<xi:include href="build/add-xml-base.xml" xpointer="xpath(/*/*)"/>

<para>FIXME: add an example to show how all=false can <emphasis>remove</emphasis>
<att>xml:base</att> attributes.</para>

</refsection>

</refentry>
