<?xml-model title="DocBook customization for the XProc book"
            href="../../schemas/xproc.rnc" 
            type="application/relax-ng-compact-syntax" ?>
<refentry xmlns="http://docbook.org/ns/docbook"
          xmlns:cx="http://xmlcalabash.com/ns/extensions"
          xmlns:xi="http://www.w3.org/2001/XInclude"
          xmlns:xlink="http://www.w3.org/1999/xlink"
          xmlns:xsd="http://www.w3.org/2001/XMLSchema"
          xmlns:p="http://www.w3.org/ns/xproc"
          xml:id="p.parameters">
<refnamediv>
<refname><step>p:parameters</step></refname>
<refpurpose>Converts step parameters into XML</refpurpose>
</refnamediv>

<refsynopsisdiv>
<p:declare-step type="p:parameters">
   <p:input port="parameters" kind="parameter" primary="false"/>
   <p:output port="result" primary="false"/>
</p:declare-step>
</refsynopsisdiv>

<refsection>
<title>Description</title>

<para>The <code>p:parameters</code> step accepts any number of parameters
and delivers them back in a <tag>c:param-set</tag> document.</para>

<para>Each parameter passed to the step is converted into a
<tag>c:param</tag> element. The step resolves duplicate parameters in
the normal way (see <xref linkend="parameters"/>) so at most one
parameter with any given name will appear in the result.
The resulting <tag>c:param</tag> elements are wrapped in a
<tag>c:param-set</tag> and the parameter set document is written
to the <port>result</port> port.
</para>

<para>The <step>p:parameters</step> step always uses the
<att>namespace</att> attribute on <tag>c:param</tag> if the parameter
is in a namespace. In other words, the <att>name</att> on the
<tag>c:param</tag> will never contain a colon.</para>

</refsection>

<refsection>
<title>Examples</title>

<xi:include href="build/parameters.xml" xpointer="xpath(/*/*)"/>

</refsection>

</refentry>
