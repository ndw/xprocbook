<?xml-model title="DocBook customization for the XProc book"
            href="../../schemas/xproc.rnc" 
            type="application/relax-ng-compact-syntax" ?>
<refentry xmlns="http://docbook.org/ns/docbook"
          xmlns:cx="http://xmlcalabash.com/ns/extensions"
          xmlns:xi="http://www.w3.org/2001/XInclude"
          xmlns:xlink="http://www.w3.org/1999/xlink"
          xmlns:xsd="http://www.w3.org/2001/XMLSchema"
          xmlns:p="http://www.w3.org/ns/xproc"
          xml:id="p.xquery">
<refnamediv>
<refname><step>p:xquery</step></refname>
<refpurpose>Performs XQuery processing</refpurpose>
</refnamediv>

<refsynopsisdiv>
<p:declare-step type="p:xquery">
  <p:input port="source" sequence="true" primary="true"/>
  <p:input port="query"/>
  <p:input port="parameters" kind="parameter"/>
  <p:output port="result" sequence="true"/>
</p:declare-step>
</refsynopsisdiv>

<refsection>
<title>Description</title>

<para>The <tag>p:xquery</tag> step applies an
<biblioref linkend="xquery10"/> query to the sequence of documents
provided as input.</para>

<para>The first document provided on the <port>source</port>
port is used as the
initial context item. The whole sequence is also the default
collection. If no documents are provided on the <port>source</port> port,
the initial context item is undefined and the default collection
is empty.</para>

<para>The <port>query</port> port must receive a single document:</para>

<itemizedlist>
<listitem>
<para>If the document root element is <tag xml:id="cv.query">c:query</tag>, the text
descendants of this element are considered the query.</para>
</listitem>

<listitem>
<para>If the document root element is in the XQueryX namespace, the
document is treated as an XQueryX-encoded query. Support for
XQueryX is <glossterm>implementation-defined</glossterm>.
</para>
</listitem>

<listitem>
<para>If the document root element is <tag>c:data</tag> and either
does not have a <tag class="attribute">content-type</tag> attribute or
has a <tag class="attribute">content-type</tag> attribute that
specifies a text content type or a media type that the implementation
recognizes, then the text descendants of this element are considered
the query.</para>
</listitem>

<listitem>
<para>If the document root element is not <tag>c:data</tag> but
has a <tag class="attribute">c:content-type</tag> attribute that specifies
a text content type or a media type that the implementation recognizes,
then the text descendants of this element are considered
the query.</para>
</listitem>
<listitem>
<para>Otherwise, the interpretation of the query
is <glossterm>implementation-defined</glossterm>.
</para>
</listitem>
</itemizedlist>

<para>The result of the <tag>p:xquery</tag> step must be a sequence of
documents. <error code="C0057">It is a <glossterm>dynamic
error</glossterm> if the sequence that results from evaluating the XQuery contains
items other than documents and elements.</error> Any elements that appear
in the result sequence will be treated as documents with the element as their
document element.</para>

<para>For example:</para>
<programlisting>
&lt;c:query&gt;
declare namespace atom="http://www.w3.org/2005/Atom";
/atom:feed/atom:entry
&lt;/c:query&gt;

</programlisting>

<para>The output of this step may include PSVI annotations.</para>

</refsection>

<refsection>
<title>Errors</title>
<informaltable>
<tgroup cols="2">
<colspec colnum="1" colwidth="1in"/>
<thead>
<row>
<entry>Error</entry>
<entry>Description</entry>
</row>
</thead>
<tbody>
<row>
<entry><error code="C0057"/></entry>
<entry>Occurs
if the sequence that results from evaluating the XQuery contains
items other than documents and elements.
</entry>
</row>
</tbody>
</tgroup>
</informaltable>
</refsection>

<refsection>
<title>Examples</title>

<para>FIXME: tbd.</para>

</refsection>

</refentry>
